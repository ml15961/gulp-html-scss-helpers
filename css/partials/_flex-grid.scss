.container {
    max-width: 1170px;
    margin: 0 auto;
}

.row {
    @include flexbox;
    @include flexFlow(row wrap);
    margin-left: -15px;
    margin-right: -15px;
    position: relative;


    &.with-justify-content-center {
        -webkit-justify-content: center;
        justify-content: center;
    }

    &.with-align-items-center {
        align-items: center;
        -webkit-justify-content: flex-end;
        justify-content: flex-end;
    }
}

[class*="col-"] {
    background: rgba($orange, 0.3);
    color: $green;
    border: 1px solid rgba($white, 0.5);
    padding-left: 15px;
    padding-right: 15px;
}

/* === BEGIN imitation BOOTSTRAP/FOUNDATION === */
$fg-columns: 12 !default;
$fg-breakpoints: (
  (vs), // стили от 0 до 480px
  (xs, 480px), // стили от 480px до 768px
  (sm, 768px), // стили от 768px до 992px
  (md, 992px), // стили от 992px до 1200px
  (lg, 1200px) // стили от 1200px
) !default;

/** Calculate column size percentage */
@function get-col-percent($column-num) {
    @return $column-num / $fg-columns * 100%;
}

/** Spacing mixin to create uniform margin/padding */
@mixin spacing( $value, $type: margin, $orientation: vertical ) {
    @if $orientation == vertical {
        #{ $type }-top: $value;
        #{ $type }-bottom: $value;
    } @else {
        #{ $type }-left: $value;
        #{ $type }-right: $value;
    }
}

@mixin grid-base( $namespace ) {
    @for $i from 1 through $fg-columns {
        .col-#{$namespace}-#{$i} {
            @extend %col;
        }
    }
}

@mixin grid-sizes( $namespace ) {
    // Run the loop for as many columns as speficied
    @for $i from 1 through $fg-columns {
        .col-#{$namespace}-#{$i} {
            flex-basis: get-col-percent($i);
            max-width:  get-col-percent($i);
        }
    }
}

@each $val in $fg-breakpoints {
    $namespace: nth($val, 1);
    @include grid-base( $namespace );
}

@each $val in $fg-breakpoints {
    @if length($val) == 1 {
        $namespace: nth($val, 1);
        @include grid-sizes( $namespace );

    } @else {
        $namespace: nth($val, 1);
        $size: nth($val, 2);

        @media screen and (min-width: #{$size}) {
            @include grid-sizes( $namespace );
        }
    }
}
/* === END imitation BOOTSTRAP/FOUNDATION === */